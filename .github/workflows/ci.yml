on:
  push:
    branches:
      - main


env:
  REGISTRY_NAME: ghacr

  DEV_CLUSTER_NAME: devAKS
  STAGING_CLUSTER_NAME: stagingAKS
  PROD_CLUSTER_NAME: prodAKS

  DEV_CLUSTER_RESOURCE_GROUP: gh-demo-dev
  STAGING_CLUSTER_RESOURCE_GROUP: gh-demo-staging
  PROD_CLUSTER_RESOURCE_GROUP: gh-demo-prod

  IMAGE_SECRET: gh-secret
  NAMESPACE: demo
  
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.DEV_REGISTRY_USERNAME }} 
        password: ${{ secrets.DEV_REGISTRY_PASSWORD }}
    
    - run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
  
  provision-and-deploy-to-dev:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Provision Dev Azure Resources
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.DEV_CLUSTER_RESOURCE_GROUP }}
        template: templates/arm/deploy-dev.json
        parameters: servicePrincipalId=${{ secrets.AZURE_CLIENT_ID }} servicePrincipalSecret=${{ secrets.AZURE_CLIENT_PWD }}

    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.DEV_CLUSTER_NAME }}
        resource-group: ${{ env.DEV_CLUSTER_RESOURCE_GROUP }}
    
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.DEV_REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.DEV_REGISTRY_PASSWORD }}
        secret-name: ${{ env.IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}
    
    - uses: azure/k8s-deploy@v1.2
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}

  provision-and-deploy-to-staging:
    needs: provision-and-deploy-to-dev
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Provision Staging Azure Resources
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.STAGING_CLUSTER_RESOURCE_GROUP }}
        template: templates/arm/deploy-staging.json
        parameters: servicePrincipalId=${{ secrets.AZURE_CLIENT_ID }} servicePrincipalSecret=${{ secrets.AZURE_CLIENT_PWD }}
    
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.STAGING_CLUSTER_NAME }}
        resource-group: ${{ env.STAGING_CLUSTER_RESOURCE_GROUP }}
    
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.DEV_REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.DEV_REGISTRY_PASSWORD }}
        secret-name: ${{ env.IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}
    
    - uses: azure/k8s-deploy@v1.2
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}

  provision-and-deploy-to-prod:
    needs: provision-and-deploy-to-staging
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Provision Production Azure Resources
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.PROD_CLUSTER_RESOURCE_GROUP }}
        template: templates/arm/deploy-prod.json
        parameters: servicePrincipalId=${{ secrets.AZURE_CLIENT_ID }} servicePrincipalSecret=${{ secrets.AZURE_CLIENT_PWD }}
    
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.PROD_CLUSTER_NAME }}
        resource-group: ${{ env.PROD_CLUSTER_RESOURCE_GROUP }}
    
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.DEV_REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.DEV_REGISTRY_PASSWORD }}
        secret-name: ${{ env.IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}
    
    - uses: azure/k8s-deploy@v1.2
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}